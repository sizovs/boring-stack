#cloud-config
users:
  - name: devops
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${publicKey}
packages:
  - jq
  - htop
  - wget
  - fail2ban
  - micro
  - sqlite3
package_update: true
package_upgrade: true
package_reboot_if_required: true
runcmd:
  # Bug, see https://github.com/hetznercloud/terraform-provider-hcloud/issues/473
  - udevadm trigger -c add -s block -p ID_VENDOR=HC --verbose -p ID_MODEL=Volume

  # Symlinks to volumes
  - ln -s /mnt/HC_Volume_${backupVolumeId} /mnt/backup

  # Wait until volumes are mounted
  - |
    max_attempts=20
    attempt=1
    while [ ! -d /mnt/backup ]; do
      echo "Attempt $attempt: Waiting for volumes to become available..."
      sleep 10
      if [ "$attempt" -ge "$max_attempts" ]; then
        echo "Reached maximum attempts. Exiting."
        exit 1
      fi
      attempt=$((attempt + 1))
    done
    echo "Volumes are now available."

  # Make "devops" owner of the backup directory.
  - sudo chown devops:devops /mnt/backup

  # Litestream
  - |
    LITESTREAM_VERSION="v0.3.13"
    arch=$(dpkg --print-architecture)
    url=https://github.com/benbjohnson/litestream/releases/download/$LITESTREAM_VERSION/litestream-$LITESTREAM_VERSION-linux-$arch.deb
    if ! curl -fLo litestream.deb "$url"; then
      echo "Error: Failed to download $url"
      exit 1
    fi
    sudo dpkg -i --force-confold litestream.deb
    rm litestream.deb
    echo "Litestream version $LITESTREAM_VERSION installed successfully."

  # Caddy
  - apt install -y debian-keyring debian-archive-keyring apt-transport-https
  - curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
  - curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list
  - apt-get update
  - apt-get -y install caddy

  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban

  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)KbdInteractiveAuthentication/s/^.*$/KbdInteractiveAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)ChallengeResponseAuthentication/s/^.*$/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 3/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers devops' /etc/ssh/sshd_config
  - systemctl reload sshd
