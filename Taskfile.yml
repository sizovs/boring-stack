version: 3

dotenv:
  - .env.devops

env:
  NODE_ENV: development
  COOKIE_SECRET: unsecure

tasks:
  terraform:
    cmds:
      - terraform -chdir=deploy {{.CLI_ARGS}}
  test:
    env:
      DB_LOCATION: ":memory:"
    cmds:
      - npm test
      - npx playwright test
  dev:
    env:
      DB_LOCATION: ./modules/database/db.sqlite3
    cmds:
      - npm install
      - npm run dev
  db:pull:
    env:
      DB_LOCATION: ./modules/database/db.sqlite3
    cmds:
      - rm -rf ./tmp
      - litestream restore -config ./deploy/litestream.yml $DB_LOCATION
  deploy:worker:
    dir: worker
    cmds:
      - echo "$WORKER_SECRET" | wrangler secret put WORKER_SECRET
      - echo "$X_SECRET_TOKEN" | wrangler secret put X_SECRET_TOKEN
      - wrangler deploy
  promote:green:
    cmds:
      - http put https://dev.club/productionHost/green.dev.club Authorization:$WORKER_SECRET
  deploy:
    silent: true
    vars:
      color: green
      ip: xxx.xxx.xxx.xxx
    cmds:
      - echo Will deploy to {{.ip}}
      - rsync -a --exclude '.env.devops' ./ devops@{{.ip}}:/home/devops/latest
      - ssh devops@{{.ip}} "DOMAIN=https://{{.color}}.dev.club R2_BACKUP_ENDPOINT=$R2_BACKUP_ENDPOINT R2_BACKUP_BUCKET=$R2_BACKUP_BUCKET R2_BACKUP_KEY=$R2_BACKUP_KEY R2_BACKUP_SECRET=$R2_BACKUP_SECRET bash -s" < ./deploy/deploy.sh
